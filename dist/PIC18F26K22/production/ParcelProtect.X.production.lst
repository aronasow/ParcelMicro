

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Nov 27 11:16:31 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           ; Version 1.44
    24                           ; Generated 14/09/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F26K22 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     _OSCCON	set	4051
    58  0000                     _RCREG1	set	4014
    59  0000                     _PIR1bits	set	3998
    60  0000                     _TXREG1	set	4013
    61  0000                     _TXSTA1bits	set	4012
    62  0000                     _TMR0L	set	4054
    63  0000                     _T0CON	set	4053
    64  0000                     _PIE1bits	set	3997
    65  0000                     _SPBRG1	set	4015
    66  0000                     _RCSTA1	set	4011
    67  0000                     _TXSTA1	set	4012
    68  0000                     _BAUDCON1	set	4024
    69  0000                     _TRISC	set	3988
    70  0000                     _TRISB	set	3987
    71  0000                     _TRISA	set	3986
    72                           
    73                           ; #config settings
    74  0000                     
    75                           	psect	cinit
    76  000272                     __pcinit:
    77                           	opt stack 0
    78  000272                     start_initialization:
    79                           	opt stack 0
    80  000272                     __initialization:
    81                           	opt stack 0
    82  000272                     end_of_initialization:
    83                           	opt stack 0
    84  000272                     __end_of__initialization:
    85                           	opt stack 0
    86  000272  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    87  000274  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    88  000276  0100               	movlb	0
    89  000278  EFAF  F000         	goto	_main	;jump to C main() function
    90                           
    91                           	psect	cstackCOMRAM
    92  000001                     __pcstackCOMRAM:
    93                           	opt stack 0
    94  000001                     ??_high_isr:
    95  000001                     
    96                           ; 1 bytes @ 0x0
    97  000001                     	ds	18
    98  000013                     ??_low_isr:
    99                           
   100                           ; 1 bytes @ 0x12
   101  000013                     	ds	21
   102  000028                     UART_Write@Data:
   103                           	opt stack 0
   104  000028                     UART_Read_Text@Output:
   105                           	opt stack 0
   106                           
   107                           ; 2 bytes @ 0x27
   108  000028                     	ds	1
   109  000029                     UART_Write_Text@text:
   110                           	opt stack 0
   111                           
   112                           ; 2 bytes @ 0x28
   113  000029                     	ds	1
   114  00002A                     UART_Read_Text@length:
   115                           	opt stack 0
   116                           
   117                           ; 2 bytes @ 0x29
   118  00002A                     	ds	1
   119  00002B                     UART_Write_Text@i:
   120                           	opt stack 0
   121                           
   122                           ; 2 bytes @ 0x2A
   123  00002B                     	ds	1
   124  00002C                     UART_Read_Text@i_193:
   125                           	opt stack 0
   126                           
   127                           ; 2 bytes @ 0x2B
   128  00002C                     	ds	2
   129  00002E                     main@test:
   130                           	opt stack 0
   131                           
   132                           ; 3 bytes @ 0x2D
   133  00002E                     	ds	3
   134  000031                     main@i:
   135                           	opt stack 0
   136                           
   137                           ; 2 bytes @ 0x30
   138  000031                     	ds	2
   139  000033                     main@i_207:
   140                           	opt stack 0
   141                           
   142                           ; 2 bytes @ 0x32
   143  000033                     	ds	2
   144  000035                     main@i_208:
   145                           	opt stack 0
   146                           
   147                           ; 2 bytes @ 0x34
   148  000035                     	ds	2
   149                           
   150 ;;
   151 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   152 ;;
   153 ;; *************** function _main *****************
   154 ;; Defined at:
   155 ;;		line 180 in file "main.c"
   156 ;; Parameters:    Size  Location     Type
   157 ;;		None
   158 ;; Auto vars:     Size  Location     Type
   159 ;;  i               2   52[COMRAM] unsigned int 
   160 ;;  i               2   50[COMRAM] unsigned int 
   161 ;;  i               2   48[COMRAM] unsigned int 
   162 ;;  test            3   45[COMRAM] unsigned char [3]
   163 ;; Return value:  Size  Location     Type
   164 ;;                  1    wreg      void 
   165 ;; Registers used:
   166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   167 ;; Tracked objects:
   168 ;;		On entry : 0/0
   169 ;;		On exit  : 0/0
   170 ;;		Unchanged: 0/0
   171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   173 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   175 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   176 ;;Total ram usage:        9 bytes
   177 ;; Hardware stack levels required when called:    4
   178 ;; This function calls:
   179 ;;		_ConfigureOscillator
   180 ;;		_UART_Read_Text
   181 ;;		_UART_Write
   182 ;;		_UART_Write_Text
   183 ;;		_init
   184 ;;		_init_Timer
   185 ;;		_init_eusart
   186 ;; This function is called by:
   187 ;;		Startup code after reset
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191                           	psect	text0
   192  00015E                     __ptext0:
   193                           	opt stack 0
   194  00015E                     _main:
   195                           	opt stack 27
   196                           
   197                           ;main.c: 184: unsigned char test[3];
   198                           ;main.c: 192: ConfigureOscillator();
   199                           
   200                           ;incstack = 0
   201  00015E  EC46  F001         	call	_ConfigureOscillator	;wreg free
   202                           
   203                           ;main.c: 195: init_Timer();
   204  000162  EC3E  F001         	call	_init_Timer	;wreg free
   205                           
   206                           ;main.c: 198: init();
   207  000166  EC2C  F001         	call	_init	;wreg free
   208                           
   209                           ;main.c: 201: init_eusart();
   210  00016A  EC22  F001         	call	_init_eusart	;wreg free
   211  00016E                     
   212                           ;main.c: 207: UART_Read_Text(test, 3);
   213  00016E  0E2E               	movlw	low main@test
   214  000170  6E28               	movwf	UART_Read_Text@Output,c
   215  000172  0E00               	movlw	high main@test
   216  000174  6E29               	movwf	UART_Read_Text@Output+1,c
   217  000176  0E00               	movlw	0
   218  000178  6E2B               	movwf	UART_Read_Text@length+1,c
   219  00017A  0E03               	movlw	3
   220  00017C  6E2A               	movwf	UART_Read_Text@length,c
   221  00017E  EC0B  F001         	call	_UART_Read_Text	;wreg free
   222                           
   223                           ;main.c: 208: for(unsigned int i=0; i<50000; i++) ;
   224  000182  0E00               	movlw	0
   225  000184  6E32               	movwf	main@i+1,c
   226  000186  0E00               	movlw	0
   227  000188  6E31               	movwf	main@i,c
   228  00018A                     l811:
   229  00018A  0E50               	movlw	80
   230  00018C  5C31               	subwf	main@i,w,c
   231  00018E  0EC3               	movlw	195
   232  000190  5832               	subwfb	main@i+1,w,c
   233  000192  B0D8               	btfsc	status,0,c
   234  000194  D003               	goto	u130
   235  000196  4A31               	infsnz	main@i,f,c
   236  000198  2A32               	incf	main@i+1,f,c
   237  00019A  D7F7               	goto	l811
   238  00019C                     u130:
   239                           
   240                           ;main.c: 209: UART_Write_Text(test);
   241  00019C  0E2E               	movlw	low main@test
   242  00019E  6E29               	movwf	UART_Write_Text@text,c
   243  0001A0  0E00               	movlw	high main@test
   244  0001A2  6E2A               	movwf	UART_Write_Text@text+1,c
   245  0001A4  ECF1  F000         	call	_UART_Write_Text	;wreg free
   246                           
   247                           ;main.c: 210: for(unsigned int i=0; i<50000; i++) ;
   248  0001A8  0E00               	movlw	0
   249  0001AA  6E34               	movwf	main@i_207+1,c
   250  0001AC  0E00               	movlw	0
   251  0001AE  6E33               	movwf	main@i_207,c
   252  0001B0                     l823:
   253  0001B0  0E50               	movlw	80
   254  0001B2  5C33               	subwf	main@i_207,w,c
   255  0001B4  0EC3               	movlw	195
   256  0001B6  5834               	subwfb	main@i_207+1,w,c
   257  0001B8  B0D8               	btfsc	status,0,c
   258  0001BA  D003               	goto	u150
   259  0001BC  4A33               	infsnz	main@i_207,f,c
   260  0001BE  2A34               	incf	main@i_207+1,f,c
   261  0001C0  D7F7               	goto	l823
   262  0001C2                     u150:
   263                           
   264                           ;main.c: 211: UART_Write(0x00);
   265  0001C2  0E00               	movlw	0
   266  0001C4  EC33  F001         	call	_UART_Write
   267                           
   268                           ;main.c: 212: for(unsigned int i=0; i<50000; i++) ;
   269  0001C8  0E00               	movlw	0
   270  0001CA  6E36               	movwf	main@i_208+1,c
   271  0001CC  0E00               	movlw	0
   272  0001CE  6E35               	movwf	main@i_208,c
   273  0001D0                     l835:
   274  0001D0  0E50               	movlw	80
   275  0001D2  5C35               	subwf	main@i_208,w,c
   276  0001D4  0EC3               	movlw	195
   277  0001D6  5836               	subwfb	main@i_208+1,w,c
   278  0001D8  B0D8               	btfsc	status,0,c
   279  0001DA  D7C9               	goto	l76
   280  0001DC  4A35               	infsnz	main@i_208,f,c
   281  0001DE  2A36               	incf	main@i_208+1,f,c
   282  0001E0  D7F7               	goto	l835
   283  0001E2                     __end_of_main:
   284                           	opt stack 0
   285                           status	equ	0xFD8
   286                           
   287 ;; *************** function _init_eusart *****************
   288 ;; Defined at:
   289 ;;		line 121 in file "main.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg, status,2
   298 ;; Tracked objects:
   299 ;;		On entry : 0/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   307 ;;Total ram usage:        0 bytes
   308 ;; Hardware stack levels used:    1
   309 ;; Hardware stack levels required when called:    2
   310 ;; This function calls:
   311 ;;		Nothing
   312 ;; This function is called by:
   313 ;;		_main
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           	psect	text1
   318  000244                     __ptext1:
   319                           	opt stack 0
   320  000244                     _init_eusart:
   321                           	opt stack 28
   322                           
   323                           ;main.c: 123: BAUDCON1 = 0b00000000;
   324                           
   325                           ;incstack = 0
   326  000244  0E00               	movlw	0
   327  000246  6EB8               	movwf	4024,c	;volatile
   328                           
   329                           ;main.c: 124: TXSTA1 = 0b00100100;
   330  000248  0E24               	movlw	36
   331  00024A  6EAC               	movwf	4012,c	;volatile
   332                           
   333                           ;main.c: 125: RCSTA1 = 0b10010000;
   334  00024C  0E90               	movlw	144
   335  00024E  6EAB               	movwf	4011,c	;volatile
   336                           
   337                           ;main.c: 126: SPBRG1 = 0b00011001;
   338  000250  0E19               	movlw	25
   339  000252  6EAF               	movwf	4015,c	;volatile
   340                           
   341                           ;main.c: 129: PIE1bits.RC1IE = 1;
   342  000254  8A9D               	bsf	3997,5,c	;volatile
   343  000256  0012               	return		;funcret
   344  000258                     __end_of_init_eusart:
   345                           	opt stack 0
   346                           status	equ	0xFD8
   347                           
   348 ;; *************** function _init_Timer *****************
   349 ;; Defined at:
   350 ;;		line 132 in file "main.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, status,2
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;Total ram usage:        0 bytes
   369 ;; Hardware stack levels used:    1
   370 ;; Hardware stack levels required when called:    2
   371 ;; This function calls:
   372 ;;		Nothing
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text2
   379  00027C                     __ptext2:
   380                           	opt stack 0
   381  00027C                     _init_Timer:
   382                           	opt stack 28
   383                           
   384                           ;main.c: 135: T0CON = 0xC7;
   385                           
   386                           ;incstack = 0
   387  00027C  0EC7               	movlw	199
   388  00027E  6ED5               	movwf	4053,c	;volatile
   389                           
   390                           ;main.c: 136: TMR0L = (256-195);
   391  000280  0E3D               	movlw	61
   392  000282  6ED6               	movwf	4054,c	;volatile
   393  000284  0012               	return		;funcret
   394  000286                     __end_of_init_Timer:
   395                           	opt stack 0
   396                           status	equ	0xFD8
   397                           
   398 ;; *************** function _init *****************
   399 ;; Defined at:
   400 ;;		line 109 in file "main.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, status,2
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;Total ram usage:        0 bytes
   419 ;; Hardware stack levels used:    1
   420 ;; Hardware stack levels required when called:    2
   421 ;; This function calls:
   422 ;;		Nothing
   423 ;; This function is called by:
   424 ;;		_main
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text3
   429  000258                     __ptext3:
   430                           	opt stack 0
   431  000258                     _init:
   432                           	opt stack 28
   433                           
   434                           ;main.c: 111: TRISA = 0b00000000;
   435                           
   436                           ;incstack = 0
   437  000258  0E00               	movlw	0
   438  00025A  6E92               	movwf	3986,c	;volatile
   439                           
   440                           ;main.c: 112: TRISB = 0b11000000;
   441  00025C  0EC0               	movlw	192
   442  00025E  6E93               	movwf	3987,c	;volatile
   443                           
   444                           ;main.c: 113: TRISC = 0b11000000;
   445  000260  0EC0               	movlw	192
   446  000262  6E94               	movwf	3988,c	;volatile
   447  000264  0012               	return		;funcret
   448  000266                     __end_of_init:
   449                           	opt stack 0
   450                           status	equ	0xFD8
   451                           
   452 ;; *************** function _UART_Write_Text *****************
   453 ;; Defined at:
   454 ;;		line 150 in file "main.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;  text            2   40[COMRAM] PTR unsigned char 
   457 ;;		 -> main@test(3), 
   458 ;; Auto vars:     Size  Location     Type
   459 ;;  i               2   42[COMRAM] unsigned int 
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;Total ram usage:        4 bytes
   474 ;; Hardware stack levels used:    1
   475 ;; Hardware stack levels required when called:    3
   476 ;; This function calls:
   477 ;;		_UART_Write
   478 ;; This function is called by:
   479 ;;		_main
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text4
   484  0001E2                     __ptext4:
   485                           	opt stack 0
   486  0001E2                     _UART_Write_Text:
   487                           	opt stack 27
   488                           
   489                           ;main.c: 152: for (unsigned int i=0;text[i]!='\0';i++)
   490                           
   491                           ;incstack = 0
   492  0001E2  0E00               	movlw	0
   493  0001E4  6E2C               	movwf	UART_Write_Text@i+1,c
   494  0001E6  0E00               	movlw	0
   495  0001E8  6E2B               	movwf	UART_Write_Text@i,c
   496  0001EA  D00B               	goto	l58
   497  0001EC                     
   498                           ;main.c: 153: UART_Write(text[i]);
   499  0001EC  502B               	movf	UART_Write_Text@i,w,c
   500  0001EE  2429               	addwf	UART_Write_Text@text,w,c
   501  0001F0  6ED9               	movwf	fsr2l,c
   502  0001F2  502C               	movf	UART_Write_Text@i+1,w,c
   503  0001F4  202A               	addwfc	UART_Write_Text@text+1,w,c
   504  0001F6  6EDA               	movwf	fsr2h,c
   505  0001F8  50DF               	movf	indf2,w,c
   506  0001FA  EC33  F001         	call	_UART_Write
   507  0001FE  4A2B               	infsnz	UART_Write_Text@i,f,c
   508  000200  2A2C               	incf	UART_Write_Text@i+1,f,c
   509  000202                     l58:
   510  000202  502B               	movf	UART_Write_Text@i,w,c
   511  000204  2429               	addwf	UART_Write_Text@text,w,c
   512  000206  6ED9               	movwf	fsr2l,c
   513  000208  502C               	movf	UART_Write_Text@i+1,w,c
   514  00020A  202A               	addwfc	UART_Write_Text@text+1,w,c
   515  00020C  6EDA               	movwf	fsr2h,c
   516  00020E  50DF               	movf	indf2,w,c
   517  000210  B4D8               	btfsc	status,2,c
   518  000212  0012               	return	
   519  000214  D7EB               	goto	l59
   520  000216                     __end_of_UART_Write_Text:
   521                           	opt stack 0
   522                           indf2	equ	0xFDF
   523                           fsr2h	equ	0xFDA
   524                           fsr2l	equ	0xFD9
   525                           status	equ	0xFD8
   526                           
   527 ;; *************** function _UART_Write *****************
   528 ;; Defined at:
   529 ;;		line 142 in file "main.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;  Data            1    wreg     unsigned char 
   532 ;; Auto vars:     Size  Location     Type
   533 ;;  Data            1   39[COMRAM] unsigned char 
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;Total ram usage:        1 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; Hardware stack levels required when called:    2
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_UART_Write_Text
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           	psect	text5
   559  000266                     __ptext5:
   560                           	opt stack 0
   561  000266                     _UART_Write:
   562                           	opt stack 27
   563                           
   564                           ;incstack = 0
   565                           ;UART_Write@Data stored from wreg
   566  000266  6E28               	movwf	UART_Write@Data,c
   567  000268                     
   568                           ;main.c: 143: while(! TXSTA1bits.TRMT) ;
   569  000268  A2AC               	btfss	4012,1,c	;volatile
   570  00026A  D7FE               	goto	l715
   571                           
   572                           ;main.c: 145: TXREG1 = Data;
   573  00026C  C028  FFAD         	movff	UART_Write@Data,4013	;volatile
   574  000270  0012               	return		;funcret
   575  000272                     __end_of_UART_Write:
   576                           	opt stack 0
   577                           indf2	equ	0xFDF
   578                           fsr2h	equ	0xFDA
   579                           fsr2l	equ	0xFD9
   580                           status	equ	0xFD8
   581                           
   582 ;; *************** function _UART_Read_Text *****************
   583 ;; Defined at:
   584 ;;		line 167 in file "main.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;  Output          2   39[COMRAM] PTR unsigned char 
   587 ;;		 -> main@test(3), 
   588 ;;  length          2   41[COMRAM] unsigned int 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  i               2   43[COMRAM] int 
   591 ;;  i               2    0        int 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   601 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   605 ;;Total ram usage:        6 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    3
   608 ;; This function calls:
   609 ;;		_UART_Read
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text6
   616  000216                     __ptext6:
   617                           	opt stack 0
   618  000216                     _UART_Read_Text:
   619                           	opt stack 27
   620                           
   621                           ;main.c: 169: int i;
   622                           ;main.c: 170: for (int i=0;i<length;i++)
   623                           
   624                           ;incstack = 0
   625  000216  0E00               	movlw	0
   626  000218  6E2D               	movwf	UART_Read_Text@i_193+1,c
   627  00021A  0E00               	movlw	0
   628  00021C  6E2C               	movwf	UART_Read_Text@i_193,c
   629  00021E  D00B               	goto	l68
   630  000220                     
   631                           ;main.c: 171: Output[i] = UART_Read();
   632  000220  502C               	movf	UART_Read_Text@i_193,w,c
   633  000222  2428               	addwf	UART_Read_Text@Output,w,c
   634  000224  6ED9               	movwf	fsr2l,c
   635  000226  502D               	movf	UART_Read_Text@i_193+1,w,c
   636  000228  2029               	addwfc	UART_Read_Text@Output+1,w,c
   637  00022A  6EDA               	movwf	fsr2h,c
   638  00022C  EC43  F001         	call	_UART_Read	;wreg free
   639  000230  6EDF               	movwf	indf2,c
   640  000232  4A2C               	infsnz	UART_Read_Text@i_193,f,c
   641  000234  2A2D               	incf	UART_Read_Text@i_193+1,f,c
   642  000236                     l68:
   643  000236  502A               	movf	UART_Read_Text@length,w,c
   644  000238  5C2C               	subwf	UART_Read_Text@i_193,w,c
   645  00023A  502B               	movf	UART_Read_Text@length+1,w,c
   646  00023C  582D               	subwfb	UART_Read_Text@i_193+1,w,c
   647  00023E  B0D8               	btfsc	status,0,c
   648  000240  0012               	return	
   649  000242  D7EE               	goto	l69
   650  000244                     __end_of_UART_Read_Text:
   651                           	opt stack 0
   652                           indf2	equ	0xFDF
   653                           fsr2h	equ	0xFDA
   654                           fsr2l	equ	0xFD9
   655                           status	equ	0xFD8
   656                           
   657 ;; *************** function _UART_Read *****************
   658 ;; Defined at:
   659 ;;		line 161 in file "main.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;		None
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      unsigned char 
   666 ;; Registers used:
   667 ;;		wreg, status,2
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   677 ;;Total ram usage:        0 bytes
   678 ;; Hardware stack levels used:    1
   679 ;; Hardware stack levels required when called:    2
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_UART_Read_Text
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text7
   688  000286                     __ptext7:
   689                           	opt stack 0
   690  000286                     _UART_Read:
   691                           	opt stack 27
   692                           
   693                           ;main.c: 163: if(PIR1bits.RC1IF) ;
   694                           
   695                           ;incstack = 0
   696  000286  509E               	movf	3998,w,c	;volatile
   697                           
   698                           ;main.c: 164: return RCREG1;
   699  000288  50AE               	movf	4014,w,c	;volatile
   700  00028A  0012               	return	
   701  00028C                     __end_of_UART_Read:
   702                           	opt stack 0
   703                           indf2	equ	0xFDF
   704                           fsr2h	equ	0xFDA
   705                           fsr2l	equ	0xFD9
   706                           status	equ	0xFD8
   707                           
   708 ;; *************** function _ConfigureOscillator *****************
   709 ;; Defined at:
   710 ;;		line 24 in file "system.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, status,2
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   728 ;;Total ram usage:        0 bytes
   729 ;; Hardware stack levels used:    1
   730 ;; Hardware stack levels required when called:    2
   731 ;; This function calls:
   732 ;;		Nothing
   733 ;; This function is called by:
   734 ;;		_main
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text8
   739  00028C                     __ptext8:
   740                           	opt stack 0
   741  00028C                     _ConfigureOscillator:
   742                           	opt stack 28
   743                           
   744                           ;system.c: 27: OSCCON = 0b01010110;
   745                           
   746                           ;incstack = 0
   747  00028C  0E56               	movlw	86
   748  00028E  6ED3               	movwf	4051,c	;volatile
   749  000290  0012               	return		;funcret
   750  000292                     __end_of_ConfigureOscillator:
   751                           	opt stack 0
   752                           indf2	equ	0xFDF
   753                           fsr2h	equ	0xFDA
   754                           fsr2l	equ	0xFD9
   755                           status	equ	0xFD8
   756                           
   757 ;; *************** function _low_isr *****************
   758 ;; Defined at:
   759 ;;		line 67 in file "interrupts.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		None
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;Total ram usage:       21 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    1
   780 ;; This function calls:
   781 ;;		Nothing
   782 ;; This function is called by:
   783 ;;		Interrupt level 1
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	intcodelo
   788  000018                     __pintcodelo:
   789                           	opt stack 0
   790  000018                     _low_isr:
   791                           	opt stack 27
   792                           
   793                           ;incstack = 0
   794  000018  8037               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   795  00001A  CFD8 F013          	movff	status,??_low_isr
   796  00001E  CFE8 F014          	movff	wreg,??_low_isr+1
   797  000022  CFE0 F015          	movff	bsr,??_low_isr+2
   798  000026  CFFA F016          	movff	pclath,??_low_isr+3
   799  00002A  CFFB F017          	movff	pclatu,??_low_isr+4
   800  00002E  CFE9 F018          	movff	fsr0l,??_low_isr+5
   801  000032  CFEA F019          	movff	fsr0h,??_low_isr+6
   802  000036  CFE1 F01A          	movff	fsr1l,??_low_isr+7
   803  00003A  CFE2 F01B          	movff	fsr1h,??_low_isr+8
   804  00003E  CFD9 F01C          	movff	fsr2l,??_low_isr+9
   805  000042  CFDA F01D          	movff	fsr2h,??_low_isr+10
   806  000046  CFF3 F01E          	movff	prodl,??_low_isr+11
   807  00004A  CFF4 F01F          	movff	prodh,??_low_isr+12
   808  00004E  CFF6 F020          	movff	tblptrl,??_low_isr+13
   809  000052  CFF7 F021          	movff	tblptrh,??_low_isr+14
   810  000056  CFF8 F022          	movff	tblptru,??_low_isr+15
   811  00005A  CFF5 F023          	movff	tablat,??_low_isr+16
   812  00005E  C037  F024         	movff	btemp,??_low_isr+17
   813  000062  C038  F025         	movff	btemp+1,??_low_isr+18
   814  000066  C039  F026         	movff	btemp+2,??_low_isr+19
   815  00006A  C03A  F027         	movff	btemp+3,??_low_isr+20
   816  00006E  C027  F03A         	movff	??_low_isr+20,btemp+3
   817  000072  C026  F039         	movff	??_low_isr+19,btemp+2
   818  000076  C025  F038         	movff	??_low_isr+18,btemp+1
   819  00007A  C024  F037         	movff	??_low_isr+17,btemp
   820  00007E  C023  FFF5         	movff	??_low_isr+16,tablat
   821  000082  C022  FFF8         	movff	??_low_isr+15,tblptru
   822  000086  C021  FFF7         	movff	??_low_isr+14,tblptrh
   823  00008A  C020  FFF6         	movff	??_low_isr+13,tblptrl
   824  00008E  C01F  FFF4         	movff	??_low_isr+12,prodh
   825  000092  C01E  FFF3         	movff	??_low_isr+11,prodl
   826  000096  C01D  FFDA         	movff	??_low_isr+10,fsr2h
   827  00009A  C01C  FFD9         	movff	??_low_isr+9,fsr2l
   828  00009E  C01B  FFE2         	movff	??_low_isr+8,fsr1h
   829  0000A2  C01A  FFE1         	movff	??_low_isr+7,fsr1l
   830  0000A6  C019  FFEA         	movff	??_low_isr+6,fsr0h
   831  0000AA  C018  FFE9         	movff	??_low_isr+5,fsr0l
   832  0000AE  C017  FFFB         	movff	??_low_isr+4,pclatu
   833  0000B2  C016  FFFA         	movff	??_low_isr+3,pclath
   834  0000B6  C015  FFE0         	movff	??_low_isr+2,bsr
   835  0000BA  C014  FFE8         	movff	??_low_isr+1,wreg
   836  0000BE  C013  FFD8         	movff	??_low_isr,status
   837  0000C2  9037               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   838  0000C4  0010               	retfie	
   839  0000C6                     __end_of_low_isr:
   840                           	opt stack 0
   841                           pclatu	equ	0xFFB
   842                           pclath	equ	0xFFA
   843                           tblptru	equ	0xFF8
   844                           tblptrh	equ	0xFF7
   845                           tblptrl	equ	0xFF6
   846                           tablat	equ	0xFF5
   847                           prodh	equ	0xFF4
   848                           prodl	equ	0xFF3
   849                           fsr0h	equ	0xFEA
   850                           fsr0l	equ	0xFE9
   851                           wreg	equ	0xFE8
   852                           fsr1h	equ	0xFE2
   853                           fsr1l	equ	0xFE1
   854                           bsr	equ	0xFE0
   855                           indf2	equ	0xFDF
   856                           fsr2h	equ	0xFDA
   857                           fsr2l	equ	0xFD9
   858                           status	equ	0xFD8
   859                           
   860 ;; *************** function _high_isr *****************
   861 ;; Defined at:
   862 ;;		line 27 in file "interrupts.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		None
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;Total ram usage:       18 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		Interrupt level 2
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	intcode
   890  000008                     __pintcode:
   891                           	opt stack 0
   892  000008                     _high_isr:
   893                           	opt stack 27
   894                           
   895                           ;incstack = 0
   896  000008  8237               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   897  00000A  EF65  F000         	goto	int_func
   898                           pclatu	equ	0xFFB
   899                           pclath	equ	0xFFA
   900                           tblptru	equ	0xFF8
   901                           tblptrh	equ	0xFF7
   902                           tblptrl	equ	0xFF6
   903                           tablat	equ	0xFF5
   904                           prodh	equ	0xFF4
   905                           prodl	equ	0xFF3
   906                           fsr0h	equ	0xFEA
   907                           fsr0l	equ	0xFE9
   908                           wreg	equ	0xFE8
   909                           fsr1h	equ	0xFE2
   910                           fsr1l	equ	0xFE1
   911                           bsr	equ	0xFE0
   912                           indf2	equ	0xFDF
   913                           fsr2h	equ	0xFDA
   914                           fsr2l	equ	0xFD9
   915                           status	equ	0xFD8
   916                           
   917                           	psect	intcode_body
   918  0000CA                     __pintcode_body:
   919                           	opt stack 27
   920  0000CA                     int_func:
   921                           	opt stack 27
   922  0000CA  CFFA F001          	movff	pclath,??_high_isr
   923  0000CE  CFFB F002          	movff	pclatu,??_high_isr+1
   924  0000D2  CFE9 F003          	movff	fsr0l,??_high_isr+2
   925  0000D6  CFEA F004          	movff	fsr0h,??_high_isr+3
   926  0000DA  CFE1 F005          	movff	fsr1l,??_high_isr+4
   927  0000DE  CFE2 F006          	movff	fsr1h,??_high_isr+5
   928  0000E2  CFD9 F007          	movff	fsr2l,??_high_isr+6
   929  0000E6  CFDA F008          	movff	fsr2h,??_high_isr+7
   930  0000EA  CFF3 F009          	movff	prodl,??_high_isr+8
   931  0000EE  CFF4 F00A          	movff	prodh,??_high_isr+9
   932  0000F2  CFF6 F00B          	movff	tblptrl,??_high_isr+10
   933  0000F6  CFF7 F00C          	movff	tblptrh,??_high_isr+11
   934  0000FA  CFF8 F00D          	movff	tblptru,??_high_isr+12
   935  0000FE  CFF5 F00E          	movff	tablat,??_high_isr+13
   936  000102  C037  F00F         	movff	btemp,??_high_isr+14
   937  000106  C038  F010         	movff	btemp+1,??_high_isr+15
   938  00010A  C039  F011         	movff	btemp+2,??_high_isr+16
   939  00010E  C03A  F012         	movff	btemp+3,??_high_isr+17
   940  000112  C012  F03A         	movff	??_high_isr+17,btemp+3
   941  000116  C011  F039         	movff	??_high_isr+16,btemp+2
   942  00011A  C010  F038         	movff	??_high_isr+15,btemp+1
   943  00011E  C00F  F037         	movff	??_high_isr+14,btemp
   944  000122  C00E  FFF5         	movff	??_high_isr+13,tablat
   945  000126  C00D  FFF8         	movff	??_high_isr+12,tblptru
   946  00012A  C00C  FFF7         	movff	??_high_isr+11,tblptrh
   947  00012E  C00B  FFF6         	movff	??_high_isr+10,tblptrl
   948  000132  C00A  FFF4         	movff	??_high_isr+9,prodh
   949  000136  C009  FFF3         	movff	??_high_isr+8,prodl
   950  00013A  C008  FFDA         	movff	??_high_isr+7,fsr2h
   951  00013E  C007  FFD9         	movff	??_high_isr+6,fsr2l
   952  000142  C006  FFE2         	movff	??_high_isr+5,fsr1h
   953  000146  C005  FFE1         	movff	??_high_isr+4,fsr1l
   954  00014A  C004  FFEA         	movff	??_high_isr+3,fsr0h
   955  00014E  C003  FFE9         	movff	??_high_isr+2,fsr0l
   956  000152  C002  FFFB         	movff	??_high_isr+1,pclatu
   957  000156  C001  FFFA         	movff	??_high_isr,pclath
   958  00015A  9237               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   959  00015C  0011               	retfie		f
   960  00015E                     __end_of_high_isr:
   961                           	opt stack 0
   962  0000                     pclatu	equ	0xFFB
   963                           pclath	equ	0xFFA
   964                           tblptru	equ	0xFF8
   965                           tblptrh	equ	0xFF7
   966                           tblptrl	equ	0xFF6
   967                           tablat	equ	0xFF5
   968                           prodh	equ	0xFF4
   969                           prodl	equ	0xFF3
   970                           fsr0h	equ	0xFEA
   971                           fsr0l	equ	0xFE9
   972                           wreg	equ	0xFE8
   973                           fsr1h	equ	0xFE2
   974                           fsr1l	equ	0xFE1
   975                           bsr	equ	0xFE0
   976                           indf2	equ	0xFDF
   977                           fsr2h	equ	0xFDA
   978                           fsr2l	equ	0xFD9
   979                           status	equ	0xFD8
   980                           pclatu	equ	0xFFB
   981                           pclath	equ	0xFFA
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           prodh	equ	0xFF4
   987                           prodl	equ	0xFF3
   988                           fsr0h	equ	0xFEA
   989                           fsr0l	equ	0xFE9
   990                           wreg	equ	0xFE8
   991                           fsr1h	equ	0xFE2
   992                           fsr1l	equ	0xFE1
   993                           bsr	equ	0xFE0
   994                           indf2	equ	0xFDF
   995                           fsr2h	equ	0xFDA
   996                           fsr2l	equ	0xFD9
   997                           status	equ	0xFD8
   998                           
   999                           	psect	rparam
  1000  0000                     pclatu	equ	0xFFB
  1001                           pclath	equ	0xFFA
  1002                           tblptru	equ	0xFF8
  1003                           tblptrh	equ	0xFF7
  1004                           tblptrl	equ	0xFF6
  1005                           tablat	equ	0xFF5
  1006                           prodh	equ	0xFF4
  1007                           prodl	equ	0xFF3
  1008                           fsr0h	equ	0xFEA
  1009                           fsr0l	equ	0xFE9
  1010                           wreg	equ	0xFE8
  1011                           fsr1h	equ	0xFE2
  1012                           fsr1l	equ	0xFE1
  1013                           bsr	equ	0xFE0
  1014                           indf2	equ	0xFDF
  1015                           fsr2h	equ	0xFDA
  1016                           fsr2l	equ	0xFD9
  1017                           status	equ	0xFD8
  1018                           
  1019                           	psect	temp
  1020  000037                     btemp:
  1021                           	opt stack 0
  1022  000037                     	ds	1
  1023  0000                     int$flags	set	btemp
  1024  0000                     wtemp6	set	btemp+1
  1025                           pclatu	equ	0xFFB
  1026                           pclath	equ	0xFFA
  1027                           tblptru	equ	0xFF8
  1028                           tblptrh	equ	0xFF7
  1029                           tblptrl	equ	0xFF6
  1030                           tablat	equ	0xFF5
  1031                           prodh	equ	0xFF4
  1032                           prodl	equ	0xFF3
  1033                           fsr0h	equ	0xFEA
  1034                           fsr0l	equ	0xFE9
  1035                           wreg	equ	0xFE8
  1036                           fsr1h	equ	0xFE2
  1037                           fsr1l	equ	0xFE1
  1038                           bsr	equ	0xFE0
  1039                           indf2	equ	0xFDF
  1040                           fsr2h	equ	0xFDA
  1041                           fsr2l	equ	0xFD9
  1042                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      54
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    UART_Read_Text@Output	PTR unsigned char  size(2) Largest target is 3
		 -> main@test(COMRAM[3]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 3
		 -> main@test(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_UART_Read_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     624
                                             45 COMRAM     9     9      0
                _ConfigureOscillator
                     _UART_Read_Text
                         _UART_Write
                    _UART_Write_Text
                               _init
                         _init_Timer
                        _init_eusart
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_Timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      4     2      2     181
                                             40 COMRAM     4     2      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      15
                                             39 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read_Text                                       8     4      4     242
                                             39 COMRAM     6     2      4
                          _UART_Read
 ---------------------------------------------------------------------------------
 (2) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_isr                                             21    21      0       0
                                             18 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                            18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _UART_Read_Text
     _UART_Read
   _UART_Write
   _UART_Write_Text
     _UART_Write
   _init
   _init_Timer
   _init_eusart

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     36      36       1       57.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
ABS                  0      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BIGRAM             F37      0       0      37        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Nov 27 11:16:31 2017

                          l58 0202                            l59 01EC                            l68 0236  
                          l76 016E                            l69 0220                            bsr 000FE0  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l715 0268                           l811 018A  
                         l823 01B0                           l835 01D0                  __CFG_CPB$OFF 000000  
                         u130 019C                           u150 01C2                  __CFG_CPD$OFF 000000  
                         wreg 000FE8                    _TXSTA1bits 000FAC                  __CFG_LVP$OFF 000000  
                        _main 015E                          _init 0258                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0037                 __CFG_BORV$190 000000                          prodh 000FF4  
                        prodl 000FF3                          start 00C6                 __CFG_IESO$OFF 000000  
                ___param_bank 000000       __end_of_UART_Write_Text 0216                         ?_main 0001  
                       ?_init 0001                         _T0CON 000FD5          UART_Read_Text@Output 0028  
                       _TMR0L 000FD6                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                  ?_init_eusart 0001           _ConfigureOscillator 028C  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
                 ?_UART_Write 0001            __size_of_UART_Read 0006          UART_Read_Text@length 002A  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000            __CFG_MCLRE$INTMCLR 000000                         main@i 0031  
             __end_of_low_isr 00C6                         pclath 000FFA                         tablat 000FF5  
                       status 000FD8                         wtemp6 0038                __CFG_HFOFST$ON 000000  
              __CFG_PBADEN$ON 000000          ?_ConfigureOscillator 0001               __initialization 0272  
                __end_of_main 01E2                  __end_of_init 0266                        ??_main 002E  
                      ??_init 0028                 __activetblptr 000000                __CFG_WDTEN$OFF 000000  
                      _RCREG1 000FAE                        _RCSTA1 000FAB                        _OSCCON 000FD3  
                      _SPBRG1 000FAF                        _TXREG1 000FAD                        _TXSTA1 000FAC  
       ??_ConfigureOscillator 0028                __CFG_XINST$OFF 000000             __end_of_UART_Read 028C  
            __end_of_high_isr 015E           __size_of_UART_Write 000C                __CFG_STVREN$ON 000000  
            ?_UART_Write_Text 0029       __size_of_UART_Read_Text 002E                     ??_low_isr 0013  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 0272                 ___rparam_used 000001  
              __pcstackCOMRAM 0001          __size_of_init_eusart 0014               __CFG_PLLCFG$OFF 000000  
          __CFG_CCP2MX$PORTC1 000000            __CFG_CCP3MX$PORTB5 000000                  ??_UART_Write 0028  
                   ?_high_isr 0001               __CFG_PWRTEN$OFF 000000                       __Hparam 0000  
                     __Lparam 0000                    _init_Timer 027C            __end_of_UART_Write 0272  
              _UART_Read_Text 0216                       __pcinit 0272                       __ramtop 1000  
                     __ptext0 015E                       __ptext1 0244                       __ptext2 027C  
                     __ptext3 0258                       __ptext4 01E2                       __ptext5 0266  
                     __ptext6 0216                       __ptext7 0286                       __ptext8 028C  
                     _low_isr 0018                    ??_high_isr 0001                __pintcode_body 00CA  
        end_of_initialization 0272                       int_func 00CA        __end_of_UART_Read_Text 0244  
                   _UART_Read 0286                UART_Write@Data 0028   __end_of_ConfigureOscillator 0292  
             ?_UART_Read_Text 0028                   ?_init_Timer 0001           UART_Read_Text@i_193 002C  
                  ?_UART_Read 0001      __size_of_UART_Write_Text 0034           start_initialization 0272  
               ??_init_eusart 0028           __size_of_init_Timer 000A             __size_of_high_isr 0156  
                   __pintcode 0008                   __pintcodelo 0018                   ??_UART_Read 0028  
            __CFG_PRICLKEN$ON 000000                      _BAUDCON1 000FB8                      ?_low_isr 0001  
         __end_of_init_eusart 0258             ??_UART_Write_Text 002B                      _PIE1bits 000F9D  
                    _PIR1bits 000F9E              __CFG_WDTPS$32768 000000                     main@i_207 0033  
                   main@i_208 0035              ??_UART_Read_Text 002C                      __Hrparam 0000  
                    __Lrparam 0000            __CFG_BOREN$SBORDIS 000000             __CFG_P2BMX$PORTB5 000000  
                ??_init_Timer 0028                   _init_eusart 0244              __size_of_low_isr 00AE  
                    _high_isr 0008            __end_of_init_Timer 0286           UART_Write_Text@text 0029  
               __size_of_main 0084                 __size_of_init 000E  __size_of_ConfigureOscillator 0006  
                    int$flags 0037                      main@test 002E                      intlevel1 0000  
                    intlevel2 0000               _UART_Write_Text 01E2             __CFG_T3CMX$PORTC0 000000  
                  _UART_Write 0266              UART_Write_Text@i 002B             __CFG_FOSC$INTIO67 000000  
